# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-12-10 20:45
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('poems', '0002_poem_rating'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='poem',
            name='rating',
        ),
        migrations.AddField(
            model_name='poem',
            name='content',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='poem',
            name='creation_time',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='poem',
            name='modification_time',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='poem',
            name='author',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='poems.Author'),
        ),
        migrations.AddField(
            model_name='poem',
            name='rates',
            field=models.ManyToManyField(blank=True, to='poems.Rate'),
        ),
    ]
